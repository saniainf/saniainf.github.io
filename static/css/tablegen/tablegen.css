/* tablegen.css */
/* Стили вынесены из tablegen.html. Для джуниора: отдельный файл облегчает поддержку и кеширование. */

body.tablegen-page {
  font-family: Arial, sans-serif;
  margin: 8px;
}

h1.tablegen-title {
  font-size: 20px;
  margin-top: 0;
}

/* #tablegen-root {
  
} */

.tablegen-basic-table {
  border-collapse: collapse;
  margin-bottom: .5rem;
}

.tablegen-basic-table td {
  border: 1px solid #aaa;
  padding: 4px 8px;
  min-width: 40px;
}

/* Заголовки (столбцы и строки) */
.tablegen-basic-table th {
  border: 1px solid #888;
  background: #f2f2f2;
  padding: 4px 6px;
  font-weight: 600;
  font-size: 12px;
  text-align: center;
  user-select: none; /* Чтобы случайно не выделять при манипуляциях */
  position: sticky; /* Возможность в будущем фиксировать */
  top: 0; /* Для thead */
  z-index: 2;
}

/* Левый столбец заголовков строк — можно кастомизировать отдельно */
.tablegen-basic-table th.tablegen-row-header {
  text-align: right;
  width: 32px;
  background: #ededed;
  position: sticky;
  left: 0;
  z-index: 1;
}

.tablegen-basic-table th.tablegen-header-corner {
  background: #e0e0e0;
  position: sticky;
  left: 0;
  z-index: 3; /* Выше строковых чтобы перекрывать границы */
}

.tablegen-basic-table th.tablegen-col-header {
  min-width: 40px;
}

/* Инпуты размеров столбцов */
.tablegen-basic-table .tablegen-colsize-input {
  width: 100%;
  border: 1px solid #bbb;
  background: #fff;
  text-align: center;
}
.tablegen-basic-table .tablegen-colsize-input:focus {
  outline: none;
  border-color: #1976d2;
  box-shadow: 0 0 0 1px #1976d2;
}

/* Пользовательские строки шапки (дублируемые в thead) */
/* Пользовательские строки шапки (headerRows). Теперь их содержимые ячейки редактируемы (td с data-r/data-c).
   Этот стиль применяется к левой нумерационной ячейке шапки. Делает фон чуть серым и шрифт жирным для визуального отделения. */
.tablegen-basic-table th.tablegen-user-header-corner {
  background: #efefef;
  font-weight: 700;
}

/* Все редактируемые ячейки пользовательской шапки (td в thead, кроме первой нумерационной колонки) — унифицируем фон и толщину шрифта */
.tablegen-basic-table thead tr:not(:first-child) td[data-r] {
  /* Фон вынесен в отдельное правило с :not, чтобы не перебивать выделение (selected / range) по специфичности */
  font-weight: 600;
}
/* Применяем базовый серый фон только если ячейка НЕ выделена и НЕ входит в диапазон */
.tablegen-basic-table thead tr:not(:first-child) td[data-r]:not(.tablegen-selected-cell):not(.tablegen-range-cell) {
  background: #f5f5f5;
}

/* Выделенная ячейка (одиночный клик) */
/* Выделенная ячейка (одиночный выбор). Раньше использовался outline, теперь оставляем только мягкий фон.
   Фон единый для шапки и тела таблицы. */
/* Унифицированный фон выделения (одна ячейка и диапазон) */
.tablegen-basic-table td.tablegen-selected-cell,
.tablegen-basic-table td.tablegen-range-cell {
  background: #d5e9ff; /* Единый спокойный голубой */
}
/* В шапке оставляем тот же цвет, чтобы не отличалось визуально */
.tablegen-basic-table thead td.tablegen-selected-cell,
.tablegen-basic-table thead td.tablegen-range-cell {
  background: #d5e9ff;
}

button.tablegen-btn {
  margin-top: 12px;
}

.hint {
  font-size: 12px;
  color: #555;
  margin-top: 8px;
}

/* Диапазонное выделение: рамки классов tablegen-range-border-* удалены из JS и CSS.
  Оставляем только заливку. Один стиль и для thead, и для tbody. */
/* (Диапазон использует тот же фон что и одиночное выделение — отдельные правила не нужны) */

/* Горизонтальная панель SidePanel (desktop only, без мобильного режима) */
.tablegen-sidepanel-horizontal .tg-sp-classes-box,
.tablegen-sidepanel-horizontal .tg-sp-attrs-box {
  max-height: 260px;
  overflow: auto;
}

/* Общие базовые стили SidePanel */
.tg-sp-title { font-weight: 600; margin-bottom: 6px; font-size: 14px; }
.tg-sp-selected-info { font-size: 12px; opacity: .85; }
.tg-sp-section-title { font-weight: 500; font-size: 13px; }
.tg-sp-section { display: flex; flex-direction: column; gap: 4px; }

/* Блок метаданных */
.tg-sp-meta { display: flex; flex-direction: column; gap: 8px; }
.tg-sp-selected-label { font-size: 12px; opacity: .75; }
.tg-sp-field { display: flex; flex-direction: column; gap: 2px; font-size: 12px; }
.tg-sp-field-inline { flex-direction: row; align-items: center; gap: 6px; }
.tg-sp-input { padding: 2px 4px; font-size: 12px; }
.tg-sp-input-text { width: 160px; }
.tg-sp-input-number { width: 80px; }

/* Пустые состояния */
.tg-sp-empty { opacity: .6; font-size: 12px; }

/* Классы (группы) */
.tg-sp-classes-box { display: flex; flex-direction: row; gap: 8px; border: 1px dashed #aaa; padding: 6px; min-width: 220px; overflow-x: auto; overflow-y: hidden; }
.tg-sp-class-group { border: 1px solid #ddd; padding: 4px 6px; display: flex; flex-direction: column; gap: 4px; min-width: 140px; background:#fff; box-sizing: border-box; }
/* Внутренняя сетка элементов класса: максимум 3 строки, далее переход в новый столбец */
.tg-sp-class-items { 
  display: grid;
  grid-auto-flow: column; /* Заполняем вниз до 3 строк, затем вправо новая колонка */
  grid-template-rows: repeat(3, auto);
  align-content: start;
  gap: 4px 12px; /* Межстрочный и межколоночный отступ */
}
.tg-sp-class-group-title { font-size: 11px; opacity: .7; }
.tg-sp-class-item { display: flex; align-items: center; gap: 4px; font-size: 12px; cursor: pointer; }
.tg-sp-class-item:hover { background: #f0f0f0; }

/* Атрибуты */
.tg-sp-attrs-box { 
  /* Аналогичная сетка: по 3 строки атрибутов в колонке. */
  display: grid;
  grid-auto-flow: column;
  grid-template-rows: repeat(3, auto);
  align-content: start;
  gap: 6px 16px;
  border: 1px dashed #aaa; 
  padding: 6px; 
  min-width: 260px; 
  overflow-x: auto; 
  overflow-y: hidden; 
}
.tg-sp-attr-row { display: flex; align-items: center; gap: 6px; font-size: 12px; }
.tg-sp-attr-label { font-size: 12px; cursor: pointer; user-select: none; }
.tg-sp-attr-editor { display: flex; align-items: center; gap: 4px; }
.tg-sp-attr-editor input[type="text"],
.tg-sp-attr-editor input[type="number"],
.tg-sp-attr-editor select { font-size: 12px; padding: 2px 4px; }
.tg-sp-attr-editor input[type="number"] { width: 90px; }
.tg-sp-attr-editor input[type="text"] { width: 120px; }

/* Стили чекбоксов и переключателей */
.tg-sp-attr-row input[type="checkbox"] { cursor: pointer; }

/* Скроллбар (не обязательно, но для аккуратности) */
.tablegen-sidepanel-horizontal .tg-sp-classes-box::-webkit-scrollbar,
.tablegen-sidepanel-horizontal .tg-sp-attrs-box::-webkit-scrollbar { width: 8px; }
.tablegen-sidepanel-horizontal .tg-sp-classes-box::-webkit-scrollbar-track,
.tablegen-sidepanel-horizontal .tg-sp-attrs-box::-webkit-scrollbar-track { background: #f1f1f1; }
.tablegen-sidepanel-horizontal .tg-sp-classes-box::-webkit-scrollbar-thumb,
.tablegen-sidepanel-horizontal .tg-sp-attrs-box::-webkit-scrollbar-thumb { background: #c1c1c1; border-radius: 4px; }
.tablegen-sidepanel-horizontal .tg-sp-classes-box::-webkit-scrollbar-thumb:hover,
.tablegen-sidepanel-horizontal .tg-sp-attrs-box::-webkit-scrollbar-thumb:hover { background: #a8a8a8; }
/* Конец блока стилей SidePanel */

/* Панель быстрых атрибутов под Action Bar */
.tablegen-quick-attrs {
  box-sizing: border-box;
  display: inline-flex; /* Делаем панель строчным flex-блоком, чтобы ширина подстраивалась под содержимое. */
  max-width: 100%; /* Ограничиваем ширину контейнера, чтобы он не выходил за рамки родителя. */
  min-height: 56px;
  gap: 12px; /* Расставляем равномерные интервалы между блоками с атрибутами, чтобы разделитель не "прилипал" к кнопкам. */
}

/* Горизонтальный скролл только для области таблицы, без влияния на верхние панели */
.tablegen-table-scroll {
  width: 100%;
  overflow-x: auto; /* Если таблица шире контейнера — появляется горизонтальный скролл */
  overflow-y: hidden;
  -webkit-overflow-scrolling: touch; /* Плавная прокрутка на тач-устройствах */
}
/* Убираем двойную нижнюю границу при горизонтальном скролле (опционально можно настроить тень) */
.tablegen-table-scroll::-webkit-scrollbar {
  height: 10px;
}
.tablegen-table-scroll::-webkit-scrollbar-track {
  background: #f1f1f1;
}
.tablegen-table-scroll::-webkit-scrollbar-thumb {
  background: #c1c1c1;
  border-radius: 4px;
}
.tablegen-table-scroll::-webkit-scrollbar-thumb:hover {
  background: #a8a8a8;
}
.tablegen-quick-attr {
  display: flex;
  flex-direction: column;
  gap: 4px;
  position: relative; /* Готовим контейнер для псевдоэлемента-разделителя, чтобы он позиционировался относительно блока. */
  padding-left: 12px; /* Добавляем внутренний отступ слева, чтобы текст не прилипал к вертикальной линии. */
}
.tablegen-quick-attr::before {
  content: ""; /* Отрисовываем декоративную вертикальную линию между соседними атрибутами. */
  position: absolute;
  left: 0;
  top: 6px; /* Смещаем линию вниз, чтобы у верхнего текста оставалась воздушность. */
  bottom: 6px; /* Делаем линию короче полной высоты, чтобы визуально лёгкий разделитель не упирался в края. */
  width: 1px;
  background: #e5e7eb; /* Нейтральный серый оттенок, согласующийся с другими линиями интерфейса. */
}
.tablegen-quick-attr:first-child {
  padding-left: 0; /* Для первого атрибута убираем отступ, иначе панель сместится вправо. */
}
.tablegen-quick-attr:first-child::before {
  display: none; /* Первый блок не имеет разделителя слева, чтобы панель начиналась чисто. */
}
.tablegen-quick-attr-header {
  display: flex;
  align-items: center;
  gap: 6px;
  font-size: 12px;
  line-height: 1;
}
.tablegen-quick-attr-title {
  font-weight: 600;
  color: #1f2937;
}
.tablegen-quick-attr-off {
  font-size: 11px;
  color: #6b7280;
}
.tablegen-quick-attr-buttons {
  display: flex;
  flex-wrap: wrap;
  gap: 4px;
}
.tablegen-quick-attr-reset {
  background: transparent;
  border: none;
  color: #9ca3af;
  cursor: pointer;
  font-size: 12px;
  line-height: 1;
  padding: 0 4px;
}
.tablegen-quick-attr-reset:hover {
  color: #1f2937;
}
.tablegen-quick-attr-empty {
  font-size: 12px;
  color: #6b7280;
}
